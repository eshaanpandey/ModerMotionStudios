{"version":3,"file":"static/js/886.98d29c44.chunk.js","mappings":"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","sources":["components/Card.tsx","components/ThumbnailGrid.tsx","pages/CategoryPage.tsx","utils/AllProjects.ts"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\ninterface CardProps {\n  id: string;\n  title: string;\n  thumbnail: string;\n}\n\nconst Card: React.FC<CardProps> = ({ id, title, thumbnail }) => {\n  return (\n    <Link to={`/project/${id}`} className=\"block rounded shadow hover:shadow-lg\">\n      <img\n        src={thumbnail}\n        alt={title}\n        className=\"w-full h-64 object-cover rounded-t\"\n        loading=\"lazy\"\n      />\n      <div className=\"p-4 bg-gray-800 text-white rounded-b\">\n        <h3 className=\"text-lg font-bold\">{title}</h3>\n      </div>\n    </Link>\n  );\n};\n\nexport default Card;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport Loader from \"./Loader.tsx\";\nimport Card from \"./Card.tsx\";\nimport { Project } from \"../types/ProjectDescription.ts\";\n\ninterface ThumbnailGridProps {\n  fetchMoreData: (page: number) => Promise<Project[]>;\n}\n\nconst ThumbnailGrid: React.FC<ThumbnailGridProps> = ({ fetchMoreData }) => {\n  const [projects, setProjects] = useState<Project[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const loaderRef = useRef<HTMLDivElement | null>(null);\n  const projectSet = useRef<Set<string>>(new Set()); // Track unique project IDs.\n\n  const loadData = async () => {\n    if (loading || !hasMore) return; // Prevent unnecessary calls.\n    setLoading(true);\n\n    const data = await fetchMoreData(page);\n\n    if (data.length === 0) {\n      setHasMore(false); // No more projects to load.\n    } else {\n      // Filter out duplicate projects.\n      const uniqueProjects = data.filter((project) => !projectSet.current.has(project.id));\n      uniqueProjects.forEach((project) => projectSet.current.add(project.id));\n\n      setProjects((prev) => [...prev, ...uniqueProjects]);\n      setPage((prev) => prev + 1); // Increment page number.\n    }\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    // Load the initial 10 projects on component mount.\n    loadData();\n  }, []);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting && !loading) {\n          loadData();\n        }\n      },\n      { threshold: 1.0 }\n    );\n\n    if (loaderRef.current) observer.observe(loaderRef.current);\n\n    return () => observer.disconnect();\n  }, [loading, hasMore]);\n\n  return (\n    <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n      {projects.map((project) => (\n        <Card\n          key={project.id}\n          id={project.id}\n          title={project.title}\n          thumbnail={project.thumbnailUrl}\n        />\n      ))}\n      {loading && projects.length === 0 && (\n    <div className=\"flex justify-center items-center h-[200px]\">\n        <Loader />\n    </div>\n)}\n{hasMore && <div ref={loaderRef}></div>}\n\n    </div>\n  );\n};\n\nexport default ThumbnailGrid;\n","import React, { useEffect, useState } from 'react';\nimport ThumbnailGrid from '../components/ThumbnailGrid.tsx';\nimport Loader from '../components/Loader.tsx';\nimport { getProjectsByCategory } from '../utils/AllProjects.ts';\nimport { useParams } from 'react-router-dom';\nimport { Project } from '../types/ProjectDescription.ts';\n\nconst CategoryPage: React.FC = () => {\n    const { category } = useParams();\n    const [projects, setProjects] = useState<Project[]>([]); // Explicitly define the type of state\n    const [loading, setLoading] = useState(true); // Manage loading state\n\n    // Fetch projects for the current category\n    useEffect(() => {\n        const fetchProjects = async () => {\n            setLoading(true); // Start loading\n            try {\n                const data = await getProjectsByCategory(category || '');\n                setProjects(data);\n            } catch (error) {\n                console.error('Error fetching projects:', error);\n                setProjects([]);\n            }\n            setLoading(false); // Loading finished\n        };\n\n        fetchProjects();\n    }, [category]); // Re-run when the category changes\n\n    const fetchCategoryProjects = async (page: number) => {\n        const pageSize = 10; // Limit to 10 projects per page\n        const startIndex = (page - 1) * pageSize;\n        return projects.slice(startIndex, startIndex + pageSize);\n    };\n\n    if (loading) {\n        return <Loader />; // Use the Loader component while loading\n    }\n\n    if (!projects.length) {\n        return (\n            <div className=\"container mx-auto p-4 text-center\">\n                <h1 className=\"text-3xl font-bold mb-6 capitalize\">{category} Projects</h1>\n                <p className=\"text-gray-500 text-lg mt-4\">\n                    No projects found for the <span className=\"font-semibold capitalize\">{category}</span> category.\n                </p>\n                <p className=\"text-gray-500 mt-2\">Please check back later!</p>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"container mx-auto p-4\">\n            <h1 className=\"text-3xl font-bold mb-6 capitalize\">{category} Projects</h1>\n            <ThumbnailGrid fetchMoreData={fetchCategoryProjects} />\n        </div>\n    );\n};\n\nexport default CategoryPage;\n","import { Project } from '../types/ProjectDescription';\n\nconst projects: Project[] = [\n    {\n        id: '1',\n        title: 'Maybe Song',\n        description: 'The cover for Maybe Song',\n        category: 'products',\n        thumbnailUrl: '/assets/images/sample3.jpg',\n        videoUrl: 'https://drive.google.com/file/d/1wtJKo5BXiPvVbSIgmpZe0r-bicgYMBaZ/view',\n        images: [\n            '/assets/images/sample1.jpg', \n            '/assets/images/sample2.webp',\n        ],\n    },\n    {\n        id: '2',\n        title: 'Project Two',\n        description: 'Description for project two',\n        category: 'reels',\n        thumbnailUrl: '/assets/images/sample1.jpg',\n    },\n    {\n        id: '3',\n        title: 'Project 3',\n        description: 'Description for project three',\n        category: 'reels',\n        thumbnailUrl: '/assets/images/sample2.webp',\n    },\n    {\n        id: '4',\n        title: 'Project 4',\n        description: 'Description for project three',\n        category: 'reels',\n        thumbnailUrl: 'https://via.placeholder.com/150',\n    },\n    {\n        id: '5',\n        title: 'Project 5',\n        description: 'Description for project three',\n        category: 'reels',\n        thumbnailUrl: 'https://via.placeholder.com/150',\n    },\n    {\n        id: '6',\n        title: 'Project Three',\n        description: 'Description for project three',\n        category: 'reels',\n        thumbnailUrl: 'https://via.placeholder.com/150',\n    },\n    {\n        id: '7',\n        title: 'Project Three',\n        description: 'Description for project three',\n        category: 'reels',\n        thumbnailUrl: 'https://via.placeholder.com/150',\n    },\n    {\n        id: '8',\n        title: 'Project Three',\n        description: 'Description for project three',\n        category: 'reels',\n        thumbnailUrl: 'https://via.placeholder.com/150',\n    },\n    {\n        id: '9',\n        title: 'Project Three',\n        description: 'Description for project three',\n        category: 'reels',\n        thumbnailUrl: 'https://via.placeholder.com/150',\n    },\n    {\n        id: '10',\n        title: 'Project Three',\n        description: 'Description for project three',\n        category: 'reels',\n        thumbnailUrl: 'https://via.placeholder.com/150',\n    },\n    {\n        id: '11',\n        title: 'Project Three',\n        description: 'Description for project three',\n        category: 'reels',\n        thumbnailUrl: 'https://via.placeholder.com/150',\n    },\n    {\n        id: '12',\n        title: 'Project Three',\n        description: 'Description for project three',\n        category: 'reels',\n        thumbnailUrl: 'https://via.placeholder.com/150',\n    },\n    {\n        id: '13',\n        title: 'Project Three',\n        description: 'Description for project three',\n        category: 'reels',\n        thumbnailUrl: 'https://via.placeholder.com/150',\n    },\n    {\n        id: '14',\n        title: 'Project Three',\n        description: 'Description for project three',\n        category: 'reels',\n        thumbnailUrl: 'https://via.placeholder.com/150',\n    },\n    {\n        id: '15',\n        title: 'Project Three',\n        description: 'Description for project three',\n        category: 'reels',\n        thumbnailUrl: 'https://via.placeholder.com/150',\n    },\n    {\n        id: '16',\n        title: 'Project Three',\n        description: 'Description for project three',\n        category: 'reels',\n        thumbnailUrl: 'https://via.placeholder.com/150',\n    },\n    {\n        id: '17',\n        title: 'Project Three',\n        description: 'Description for project three',\n        category: 'reels',\n        thumbnailUrl: 'https://via.placeholder.com/150',\n    },\n    {\n        id: '18',\n        title: 'Project Three',\n        description: 'Description for project three',\n        category: 'reels',\n        thumbnailUrl: 'https://via.placeholder.com/150',\n    },\n    {\n        id: '19',\n        title: 'Project Three',\n        description: 'Description for project three',\n        category: 'reels',\n        thumbnailUrl: 'https://via.placeholder.com/150',\n    },\n    {\n        id: '20',\n        title: 'Project Three',\n        description: 'Description for project three',\n        category: 'reels',\n        thumbnailUrl: 'https://via.placeholder.com/150',\n    },\n    {\n        id: '21',\n        title: 'Project Three',\n        description: 'Description for project three',\n        category: 'reels',\n        thumbnailUrl: 'https://via.placeholder.com/150',\n    },\n    {\n        id: '22',\n        title: 'Project Three',\n        description: 'Description for project three',\n        category: 'reels',\n        thumbnailUrl: 'https://via.placeholder.com/150',\n    },\n    {\n        id: '23',\n        title: 'Project Three',\n        description: 'Description for project three',\n        category: 'reels',\n        thumbnailUrl: 'https://via.placeholder.com/150',\n    },\n    {\n        id: '24',\n        title: 'Project Three',\n        description: 'Description for project three',\n        category: 'reels',\n        thumbnailUrl: 'https://via.placeholder.com/150',\n    },\n    {\n        id: '25',\n        title: 'Project Three',\n        description: 'Description for project three',\n        category: 'reels',\n        thumbnailUrl: 'https://via.placeholder.com/150',\n    },\n    {\n        id: '26',\n        title: 'Project Three',\n        description: 'Description for project three',\n        category: 'reels',\n        thumbnailUrl: 'https://via.placeholder.com/150',\n    },\n    {\n        id: '27',\n        title: 'Project Three',\n        description: 'Description for project three',\n        category: 'reels',\n        thumbnailUrl: 'https://via.placeholder.com/150',\n    },\n    {\n        id: '28',\n        title: 'Project Three',\n        description: 'Description for project three',\n        category: 'reels',\n        thumbnailUrl: 'https://via.placeholder.com/150',\n    },\n    {\n        id: '29',\n        title: 'Project Three',\n        description: 'Description for project three',\n        category: 'reels',\n        thumbnailUrl: 'https://via.placeholder.com/150',\n    },\n    {\n        id: '30',\n        title: 'Project Three',\n        description: 'Description for project three',\n        category: 'reels',\n        thumbnailUrl: 'https://via.placeholder.com/150',\n    },\n    \n];\n\nexport const getAllProjects = (): Promise<Project[]> => {\n    return new Promise((resolve) => {\n        setTimeout(() => resolve(projects), 500); // Simulate network delay\n    });\n};\n\nexport const getProjectsByCategory = (category: string): Promise<Project[]> => {\n    return new Promise((resolve) => {\n        setTimeout(() => resolve(projects.filter((p) => p.category === category)), 500);\n    });\n};\n\nexport const getProjectById = (id: string): Promise<Project | undefined> => {\n    return new Promise((resolve) => {\n        setTimeout(() => resolve(projects.find((p) => p.id === id)), 500);\n    });\n};\n\nexport const fetchMoreData = async (page: number): Promise<Project[]> => {\n    const pageSize = 10; // Load 10 projects per page.\n    const startIndex = (page - 1) * pageSize;\n    const endIndex = page * pageSize;\n  \n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve(projects.slice(startIndex, endIndex));\n      }, 500);\n    });\n  };\n\nexport const fetchMoreDataForCategories = async (page: number, category: string): Promise<Project[]> => {\n    const projectsInCategory = await getProjectsByCategory(category);\n    const pageSize = 10; // Load 10 projects per page.\n    const startIndex = (page - 1) * pageSize;\n    const endIndex = page * pageSize;\n  \n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve(projects.slice(startIndex, endIndex));\n      }, 500);\n    });\n  };\n  "],"names":["_ref","id","title","thumbnail","_jsxs","Link","to","concat","className","children","_jsx","src","alt","loading","fetchMoreData","projects","setProjects","useState","setLoading","page","setPage","hasMore","setHasMore","loaderRef","useRef","projectSet","Set","loadData","async","data","length","uniqueProjects","filter","project","current","has","forEach","add","prev","useEffect","observer","IntersectionObserver","_ref2","entry","isIntersecting","threshold","observe","disconnect","map","Card","thumbnailUrl","Loader","ref","CategoryPage","category","useParams","getProjectsByCategory","error","console","fetchProjects","ThumbnailGrid","startIndex","slice","description","videoUrl","images","Promise","resolve","setTimeout","p","getProjectById","find","endIndex"],"sourceRoot":""}